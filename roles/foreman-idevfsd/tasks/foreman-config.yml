- name: "Administrator password"
  rails_script:
    interpreter: "{{ foreman_docker_rails_interpreter }}"
    postcondition: |
      User::try_to_login "{{ foreman_admin_user }}", "{{ foreman_admin_password }}"
    action: |
      admin = User.unscoped.find_by_login "{{ foreman_admin_user }}"
      admin.upgrade_password "{{ foreman_admin_password }}"
      admin.save
    recheck: yes

- name: "{{ foreman_ldap_name }} Authentication with automatic registration"
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.auth_source_ldap:
    name: "{{ foreman_ldap_name }}"
    host: "{{ foreman_ldap_host }}"
    tls: "{{ foreman_ldap_tls }}"
    port: "{{ foreman_ldap_port }}"
    onthefly_register: true
    base_dn: "{{ foreman_ldap_base_dn }}"
    groups_base: "{{ foreman_ldap_auth_groups_base }}"
    server_type: free_ipa
    attr_login: uid
    attr_firstname: givenName
    attr_lastname: sn
    attr_mail: mail
    state: present
  tags:
    - foreman.config.ldap

- name: "Connect to smart proxy"
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.smart_proxy:
    name: "{{ foreman_smartproxy_name }}"
    ## Use a FQDN because some API endpoints (e.g. the one when
    ## the smart proxy is done with some remote ssh execution)
    ## perform DNS-based authentication:
    url: "http://{{ foreman_smartproxy_container_name }}.{{ foreman_docker_network_name }}:8000"
    organizations:
      - "{{ foreman_main_organization_name }}"
    locations:
      - "{{ foreman_main_location_name }}"
    state: present

- name: "unattended_url"
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.setting:
    name: "unattended_url"
    value: >-
      {{ foreman_frontend_url | replace("https://", "http://") }}

- name: "ssl_ca_file"
  ## Having a “real” CA is necessary for Foreman's new (in v2.3)
  ## registration by dynamically-generated shell script feature:
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.setting:
    name: "ssl_ca_file"
    value: "{{ foreman_frontend_selfsigned_cert_path }}"

- name: "Administrator password"
  rails_script:
    interpreter: "{{ foreman_docker_rails_interpreter }}"
    postcondition: |
      User::try_to_login "{{ foreman_admin_user }}", "{{ foreman_admin_password }}"
    action: |
      admin = User.unscoped.find_by_login "{{ foreman_admin_user }}"
      admin.upgrade_password "{{ foreman_admin_password }}"
      admin.save
    recheck: yes

- name: "Connect to smart proxy"
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.smart_proxy:
    name: "{{ foreman_smartproxy_name }}"
    ## Use a FQDN because some API endpoints (e.g. the one when
    ## the smart proxy is done with some remote ssh execution)
    ## perform DNS-based authentication:
    url: "http://{{ foreman_smartproxy_container_name }}.{{ foreman_docker_network_name }}:8000"
    organizations:
      - "{{ foreman_main_organization_name }}"
    locations:
      - "{{ foreman_main_location_name }}"
    state: present

- name: "unattended_url"
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.setting:
    name: "unattended_url"
    value: >-
      {{ foreman_frontend_url | replace("https://", "http://") }}

- name: "ssl_ca_file"
  ## Having a “real” CA is necessary for Foreman's new (in v2.3)
  ## registration by dynamically-generated shell script feature:
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.setting:
    name: "ssl_ca_file"
    value: "{{ foreman_frontend_selfsigned_cert_path }}"

- name: "Import `kubespray' Ansible role from smart proxy"
  # There no `kubespray` role in Kubespray. This is a fake role that
  # the Docker entry point script sets up (see
  # ../templates/docker-entrypoint-smartproxy.sh) so as to import
  # the variables we want into Foreman, and only these.
  rails_script:
    interpreter: "{{ foreman_docker_rails_interpreter }}"
    postcondition: |
      ! AnsibleRole.find_by(:name => "kubespray").nil?
    recheck: yes
    action: |
      ForemanAnsible::ApiRolesImporter.new(
          SmartProxy.find_by(:name => "{{ foreman_smartproxy_name }}")
      ).import_role_names["new"].map do |role|
        if role.name == "kubespray"
          role.save
          exit_json(:changed => true)
        end
      end
      exit_json(:failed => true, :message => "Could not find `kubespray' role")
  tags: foreman.config.kubespray

- name: "Import Ansible variables for “kubespray” role"
  rails_script:
    interpreter: "{{ foreman_docker_rails_interpreter }}"
    action: |
      kubespray_vars = ForemanAnsible::VariablesImporter.new(
        SmartProxy.find_by :name => "{{ foreman_smartproxy_name }}"
      ).import_variable_names([]).values.flatten.select do |v|
        v.ansible_role.name == "kubespray"
      end

      changes = []
      for v in kubespray_vars do
        v.override = true
        # Absent support in foreman_ansible for tweaking smart prameters
        # from the "edit host" page (like the thing that exists for Puppet
        # smart parameters), it seems best for clarity to template them out
        # of the like-named host parameter:
        v.default_value = "<%= host_param(\"#{v.key}\") %>"
        if v.changed?
          changes.push v.key
          v.save
        end
      end

      exit_json(:changed => ! changes.empty?,
                :changes => changes)
  tags: foreman.config.kubespray

- include_vars:
    name: foreman_inventory
    file: "../../../managed-inventory.yml"

- name: Install the YAML Python API
  pip:
    executable: pip3
    name:
      - PyYAML
    state: latest

- name: "Preseed default finish custom snippet"
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.provisioning_template:
    # As the name implies, `Preseed default finish` calls out to this one
    name: "Preseed default finish custom snippet"
    kind: snippet
    template: |
      <% if !( host_param('epfl_root_authorized_keys').blank? ||
               host_param('epfl_root_authorized_keys').strip.empty? ) %>
      # Add ssh keys from Foreman's 'epfl_root_authorized_keys' host / hostgroup parameter
      mkdir -p ~root/.ssh
      cat << EOF > ~root/.ssh/authorized_keys
      <%= host_param('epfl_root_authorized_keys') %>
      EOF

      chmod 0700 ~root/.ssh
      chmod 0600 ~root/.ssh/authorized_keys
      chown -R root: ~root/.ssh

      # Apply SELinux context with restorecon, if available:
      command -v restorecon && restorecon -RvF ~root/.ssh || true
      <% end %>

      <%= snippet_if_exists(@host.hostgroup.to_s + " finish snippet") %>

- name: "Per-hostgroup finish snippets"
  environment: "{{ foreman_api_environment }}"
  theforeman.foreman.provisioning_template:
    name: "{{ hostgroup_name }} finish snippet"
    kind: snippet
    template: |
      {{ hostgroup["finish_snippet"] }}
  vars:
    hostgroup: "{{ foreman_inventory[hostgroup_name] }}"
  when: >-
    "finish_snippet" in hostgroup
  with_items: "{{ foreman_inventory.keys() }}"
  loop_control:
    loop_var: hostgroup_name
